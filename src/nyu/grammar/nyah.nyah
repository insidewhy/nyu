@include nyu
@module nyu.grammar

enum Status { UNKNOWN, PROCESSING, PROCESSED }

class WithStatus {
    status_ := Status.UNKNOWN
}

@grammar nyah : nyu

Id       <- nyu::Id
ScopedId <- nyu::ScopedId

UnsignedInteger <- [0-9]+

EnumEntry  <- #Id ('=' UnsignedInteger)?
Enum       <= 'enum' #Id '{' EnumEntry* '}'

// todo: add more to these
AssignExpression <- ScopedId
Type             <- ScopedId

Attribute         <= #Id ':' Type
AssignedAttribute <= #Id ':' '=' AssignExpression

Class             < WithStatus =
    'class' #Id '{' (Attribute / AssignedAttribute / Enum)* '}'

Grammar           <- Class / Enum
